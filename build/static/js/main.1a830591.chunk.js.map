{"version":3,"sources":["Filter.js","PersonForm.js","Persons.js","network/personService.js","Notification.js","App.js","index.js"],"names":["Filter","onChange","value","PersonForm","name","number","onNameChange","onNumberChange","onSubmit","type","Persons","persons","filter","onDeleteClick","person","toLowerCase","includes","map","onClick","id","baseUrl","service","getAll","axios","get","then","response","data","create","newObject","post","remove","delete","update","updatedPerson","put","Notification","notification","message","success","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","setNotification","useEffect","personService","retrievedPersons","catch","error","console","log","showNotification","setTimeout","event","target","preventDefault","possiblyExistingPerson","find","personObject","window","confirm","some","alert","createdPerson","concat","personToRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a830591.chunk.js","sourcesContent":["const Filter = ({ onChange, value }) => {\n  return (\n    <div>\n      filter shown with: <input value={value} onChange={onChange} />\n    </div>\n  )\n};\n\nexport default Filter;\n","const PersonForm = ({ name, number, onNameChange, onNumberChange, onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={name} onChange={onNameChange} />\n      </div>\n      <div>\n        number: <input value={number} onChange={onNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm;\n","const Persons = ({ persons, filter, onDeleteClick }) => {\n  return (\n    <>\n    {persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase())).map(person => {\n      return (\n        <div key={person.id}>\n          {person.name} {person.number} <button onClick={() => onDeleteClick(person.id)}>delete</button>\n        </div>\n      );\n    })}\n    </>\n  )\n}\n\nexport default Persons;\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`).then(response => response.data);\n  return request;\n}\n\nconst update = (id, updatedPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, updatedPerson).then(response => response.data);\n  return request;\n}\n\nconst service = { getAll, create, remove, update };\n\nexport default service;\n","const Notification = ({ notification }) => {\n  if (notification === null) {\n    return null\n  }\n  \n  const { message, success } = notification;\n\n  return (\n    <div className={success ? 'success' : 'error'}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;","import React, { useEffect, useState } from 'react'\nimport Filter from './Filter';\nimport PersonForm from './PersonForm';\nimport Persons from './Persons';\nimport personService from './network/personService';\nimport Notification from './Notification';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]); \n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then(retrievedPersons => setPersons(retrievedPersons)).catch(error => console.log(error));\n  }, []);\n\n  const showNotification = (message, success) => {\n    setNotification({ message, success });\n    setTimeout(() => {\n      setNotification(null);\n    }, 5 * 1000);\n  }\n\n  const handleAddPerson = (event) => {\n    event.preventDefault();\n    const possiblyExistingPerson = persons.find(person => person.name.toLowerCase() === newName.toLowerCase());\n    const personObject = { name: newName, number: newNumber }\n    if (possiblyExistingPerson && window.confirm(`${possiblyExistingPerson.name} already exists in the phonebook, would you like to update their number?`)) {\n      personService.update(possiblyExistingPerson.id, personObject).then(updatedPerson => {\n        setPersons(persons.map(person => person.id === possiblyExistingPerson.id ? updatedPerson : person));\n        setNewName('');\n        setNewNumber('');\n        showNotification(`Updated ${personObject.name}'s entry in the phonebook!`, true);\n      }).catch(() => {\n        showNotification(`${personObject.name}'s entry no longer exists in the phonebook!`, false);\n        setPersons(persons.filter(person => person.id !== possiblyExistingPerson.id));\n      });\n    } else if (persons.some(person => person.number === newNumber)) {\n      window.alert(`The number ${newNumber} is already in the phonebook!`);\n    } else if (!possiblyExistingPerson) {\n      personService.create(personObject)\n        .then((createdPerson) => {\n          setPersons(persons.concat(createdPerson));\n          setNewName('');\n          setNewNumber('');\n          showNotification(`Added ${personObject.name} to the phonebook!`, true);\n        })\n        .catch(error => console.log(error));\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const handleRemovePerson = (id) => {\n    const personToRemove = persons.find(person => person.id === id);\n    if (personToRemove && window.confirm(`Would you really like to remove ${personToRemove.name} from the phonebook?`)) {\n      personService.remove(id).then(() => {\n        setPersons(persons.filter(person => person.id !== id));\n      }).catch(error => console.log(error));\n    }\n  }\n\n  return (\n    <div>\n      <Notification notification={notification} />\n      <h2>Phonebook</h2>\n      <Filter value={filter} onChange={handleFilterChange} />\n      <h2>Add a new</h2>\n      <PersonForm onSubmit={handleAddPerson} onNameChange={handleNameChange} onNumberChange={handleNumberChange} name={newName} number={newNumber} />\n      <h2>Numbers</h2>\n      <Persons onDeleteClick={handleRemovePerson} filter={filter} persons={persons} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}